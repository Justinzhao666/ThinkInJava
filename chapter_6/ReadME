#
# Thinking in JAVA 笔记及后感：* 第6章：访问权限控制
#

### 开闭原则，访问控制权限等存在的原因： 始终注重 类库开发者，类库使用者 这两个角色展开！
    我们作为类库开发者有权利修改自己的类库，但是客户端可能已经在使用你所写的类库，所以开闭原则保证我们的修改不会对使用者造成影响！
    当你修改了一个内部的public方法，而这个方法在外面被使用了，那么使用者就需要修改所有这些地方的方法，这明显是不实际的！你不知道用户是否用了，你无法控制客户修改，客户可能因为你的修改导致难以预料的结果。所以一定保证自己public出去的东西不能再后期修改！而且public出去的只能是希望提供用户使用的方法，自己内部使用的方法千万不要public出去，避免被客户端使用！

### 访问控制权限：public、protect、默认包权限、private
    优先使用private，能使用private的就使用public！仅向客户端公开你想要让他们使用的方法。

# 一个java文件只有一个public类。和文件名相匹配。

# 包的结构：域名的倒叙小写，保证发布的时候其唯一性！域名肯定是唯一的。

## java运行加载类的时候，会从环境变量CLASSPATH中去找到需要的class文件！


## 静态导入
    import static xxxxx
    xxx是一个类名，里面的方法必须是静态方法才行！@see:common/util/Print.java
    使用静态导入，可以直接使用类库的方法，不需要使用 Class.function()格式，直接使用function()!
## import实现条件编译：
    import自己带调试log的类库代码，发布的时候换成不带log的代码！---修改import。

### get/set
    推荐使用这两个来修改属性值！是一种优雅的方式。
    1.可以对参数校验。
    2.可以直接避免客户端直接访问属性，有可能这个属性是你不想让别人直接使用的。


### 访问控制权限
    private  包  protect  public
    通过使用访问控制权限，使得public为对外接口，private为内部实现，我们可以任意修改不是public的东西！因为客户端无法访问这些内容。
    类不可以设置为protect和private的，设置了没有意义！
    ### 代码书写规范：
    public放在最前，protect接着，包和private放在最后。


## 总结：
    控制访问权限原因：
    1. 为了使客户端不触碰那些它们不该触碰的部分。
    2. 可以方便类库使用者更改它们的类库实现，而不担心对客户端产生影响。
    所以前期设计很重要！